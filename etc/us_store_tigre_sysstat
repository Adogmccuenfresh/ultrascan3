#!/usr/local/bin/perl

$ENV{'GLOBUS_LOCATION'} = '/share/apps/tigre/globus';


# @systems = ( 'bcf.uthscsa.edu' , 'alamo.uthscsa.edu');
@systems = ( 'lonestar.tacc.utexas.edu', 'eldorado.acrl.uh.edu', 'antaeus.hpcc.ttu.edu', 'cosmos.tamu.edu', 'bcf.uthscsa.edu', 'alamo.uthscsa.edu', 'laredo.uthscsa.edu' );
$cutoff = 4;
@systemssize = ( 4, 2, 2 );
@globusport = ( 8443, 8443, 9443, 8443, 9443, 9443, 9443 );

use Net::Telnet;

$proxy = `env LD_LIBRARY_PATH=/share/apps/tigre/globus/lib:\$LD_LIBRARY_PATH /share/apps/tigre/globus/bin/grid-proxy-info 2>&1`;
open(LOG, ">>/tmp/us_get_tigre_sysstat.out");
print LOG `date
echo \$PATH
echo \$LD_LIBRARY_PATH
who am i`;
print LOG $proxy;
close LOG;

if($proxy =~ /ERROR/) {
    $noproxy++;
} else {
    ( $timeleft ) = $proxy =~ /timeleft : (.*)$/;

    ( $hh, $mm, $ss ) = $timeleft =~ /(\d*):(\d\d):(\d\d)/;

    if($hh == 0 && $mm < 5) {
	$noproxy++;
    }
}

$ultrascan = $ENV{'ULTRASCAN'};
open(OUT, ">$ultrascan/etc/tigre_sysstat.new");

for($i = 0; $i < $cutoff; $i++) {
# no load checking
	$t = new Net::Telnet(Timeout=>.1, Errmode=>'return', Port=>$globusport[$i]);
    $t->open($systems[$i]);
	print OUT "$systems[$i] ";
    if(!length($t->errmsg)) {
	if($systems[$i] =~ /tamu.edux/) {
	    print OUT 'up TESTING *';
	} else {
	    print OUT 'up * *';
	}
    } else {
	print OUT 'down * *';
    }
    $t->close();
    print OUT "\n";
}

for($i = $cutoff; $i < @systems; $i++) {
    print OUT "$systems[$i] ";
    $t = new Net::Telnet(Timeout=>.1, Errmode=>'return', Port=>$globusport[$i]);
    $t->open($systems[$i]);
    if(!length($t->errmsg)) {
	print OUT 'up ';
	if(!$noproxy) { #  && !($systems[$i] =~ /laredo/)) {
	    $sys1 = `perl $ultrascan/etc/pbsinfo.pl $systems[$i] 15001 2>/dev/null`;
	    chomp $sys1;
	    $sys2 = `perl $ultrascan/etc/pbsinfo.pl $systems[$i] 36001 2>/dev/null`; # if $systems[$i] ne 'bcf.uthscsa.edu';
	    chomp $sys2;
	    print OUT "$sys1 $sys2";
	} else {
	    print OUT '* *';
	}
    } else {
	print OUT 'down * *';
    }
    $t->close();
    print OUT "\n";
}
print OUT "meta up TESTING * *\n";
close(OUT);
sleep 2;

open(FH, "$ultrascan/etc/tigre_sysstat");
flock(FH, 2) || print STDERR "$0: Warning can not flock $ultrascan/etc/tigre_sysstat\n";
system("mv $ultrascan/etc/tigre_sysstat.new $ultrascan/etc/tigre_sysstat");
close(FH);



       

